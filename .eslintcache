[{"/home/jishan/Desktop/TUT_Code_Test/crypto_currencies_client/src/index.js":"1","/home/jishan/Desktop/TUT_Code_Test/crypto_currencies_client/src/App.js":"2","/home/jishan/Desktop/TUT_Code_Test/crypto_currencies_client/src/reportWebVitals.js":"3","/home/jishan/Desktop/TUT_Code_Test/crypto_currencies_client/src/components/CryptoCurrencies.jsx":"4","/home/jishan/Desktop/TUT_Code_Test/crypto_currencies_client/src/context/CryptoCurrenciesContext.jsx":"5"},{"size":522,"mtime":1610510829953,"results":"6","hashOfConfig":"7"},{"size":470,"mtime":1610527062173,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610506866507,"results":"9","hashOfConfig":"7"},{"size":1775,"mtime":1610527824632,"results":"10","hashOfConfig":"7"},{"size":411,"mtime":1610526167837,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vi8trd",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/jishan/Desktop/TUT_Code_Test/crypto_currencies_client/src/index.js",[],["24","25"],"/home/jishan/Desktop/TUT_Code_Test/crypto_currencies_client/src/App.js",[],"/home/jishan/Desktop/TUT_Code_Test/crypto_currencies_client/src/reportWebVitals.js",[],"/home/jishan/Desktop/TUT_Code_Test/crypto_currencies_client/src/components/CryptoCurrencies.jsx",["26"],"import React, { useState, useContext } from \"react\";\nimport { CryptoCurrenciesContext } from \".././context/CryptoCurrenciesContext\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst CryptoCurrencies = (props) => {\n  const [state, setState] = useContext(CryptoCurrenciesContext);\n  const [cryptoCurrencies, setCryptoCurrencies] = useState([]);\n  const [showInfo, setShowInfo] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const getCryptoCurrencies = async (display) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/crypto_currencies\");\n      const data = await response.json();\n      await setCryptoCurrencies(data);\n      setShowInfo(display);\n      await setState(data);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const renderCryptoCurrencies = () => {\n    return cryptoCurrencies.map((data, index) => {\n      return (\n        <div className=\"div ml-5\" key={index}>\n          <p>{data.Currency}</p>\n          <p>{(Number(data.Open) - Number(data.Close)).toFixed(2)}</p>\n          \n          <p>{formattedDate(data.Date)}</p>\n        </div>\n      );\n    });\n  };\n  const formattedDate = (date) => {\n   return moment(date).format(\"YYYY-MM-DD\");\n  }\nconsole.log(formattedDate(selectedDate))\n  return (\n    <div>\n      <button\n        onClick={() => getCryptoCurrencies(!showInfo)}\n        className=\"btn btn-info m-5\"\n      >\n        Show Crypto Currencies Data\n      </button>\n      <DatePicker\n        selected={selectedDate}\n        onChange={(date) => setSelectedDate(date)}\n      />\n      {renderCryptoCurrencies()}\n      {showInfo && renderCryptoCurrencies()}\n    </div>\n  );\n};\nexport default CryptoCurrencies;\n","/home/jishan/Desktop/TUT_Code_Test/crypto_currencies_client/src/context/CryptoCurrenciesContext.jsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":9,"column":10,"nodeType":"33","messageId":"34","endLine":9,"endColumn":15},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]